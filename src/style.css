@import 'https://unpkg.com/open-props' layer(design.system);
/* @import 'https://unpkg.com/open-props/normalize.min.css' layer(cardlayer.support); */

:root {
	font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
	line-height: 1.5;
	font-weight: 400;

	color-scheme: light dark;
	color: rgba(255, 255, 255, 0.87);
	background-color: #242424;

	font-synthesis: none;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	--transition: 0.25s;
	--spark: 1.8s;
}

a {
	font-weight: 500;
	color: #646cff;
	text-decoration: inherit;
}
a:hover {
	color: #535bf2;
}

body {
	margin: 0;
	min-height: 100vh;
}

h1 {
	font-size: 3.2em;
	line-height: 1.1;
}

@keyframes slide-in {
	from {
		scale: 0.85;
		rotate: calc((var(--side, 1) * (5deg * var(--amp, 1))));
	}
}

.main-title {
	position: sticky;
	top: 5rem;
	color: rebeccapurple;
	left: 40%;
	z-index: 10000;
	/* text-shadow: 0 1px 0 rgb(218.6666666667, 160.5333333333, 160.5333333333), 0 2px 0 rgb(215.8333333333, 153.1666666667, 153.1666666667), 0 3px 0 rgb(213, 145.8, 145.8), 0 4px 0 rgb(210.1666666667, 138.4333333333, 138.4333333333), 0 5px 0 rgb(207.3333333333, 131.0666666667, 131.0666666667), 0 6px 0 rgb(204.5, 123.7, 123.7), 0 7px 0 rgb(201.6666666667, 116.3333333333, 116.3333333333), 0 8px 0 rgb(198.8333333333, 108.9666666667, 108.9666666667), 0 0 5px rgba(229.9333333333, 139.0666666667, 139.0666666667, 0.05), 0 -1px 3px rgba(229.9333333333, 139.0666666667, 139.0666666667, 0.2), 0 9px 9px rgba(229.9333333333, 139.0666666667, 139.0666666667, 0.3), 0 12px 12px rgba(229.9333333333, 139.0666666667, 139.0666666667, 0.3), 0 15px 15px rgba(229.9333333333, 139.0666666667, 139.0666666667, 0.3); */
	text-shadow: 0 1px 0 rgb(81.6, 40.8, 122.4), 0 2px 0 rgb(76.5, 38.25, 114.75), 0 3px 0 rgb(71.4, 35.7, 107.1), 0 4px 0 rgb(66.3, 33.15, 99.45), 0 5px 0 rgb(61.2, 30.6, 91.8), 0 6px 0 rgb(56.1, 28.05, 84.15), 0 7px 0 rgb(51, 25.5, 76.5), 0 8px 0 rgb(45.9, 22.95, 68.85), 0 0 5px rgba(76.5, 22.95, 130.05, 0.05), 0 -1px 3px rgba(76.5, 22.95, 130.05, 0.2), 0 9px 9px rgba(76.5, 22.95, 130.05, 0.3), 0 12px 12px rgba(76.5, 22.95, 130.05, 0.3), 0 15px 15px rgba(76.5, 22.95, 130.05, 0.3);
}

#canvas {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	overflow: hidden;
}

@layer cardlayer {
	.card-animation-layer {
		@media (prefers-reduced-motion: no-preference) {
			@supports (animation-timeline: view()) {
				animation: slide-in linear both;
				animation-timeline: view();
				animation-range: cover 0% contain 15%;
			}
		}
	}
}

@layer cardlayer.support {
	body {
		display: grid;
		place-content: end center;
		padding: var(--size-5);
		gap: var(--size-5);
	}

	main {
		--cols: 2;
		display: grid;
		grid-template-columns: repeat(var(--cols), minmax(0, var(--size-content-2)));
		gap: var(--size-5);
		padding-inline: var(--size-5);
		padding-block: 75svh 50svh;
		place-items: start;

		@media (width >= 720px) {
			--cols: 2;
		}
		@media (width >= 1200px) {
			--cols: 4;
		}
		@media (width >= 1920px) {
			--cols: 4;
		}

		& > .card-animation-layer {
			display: grid;
			gap: var(--size-2);

			&:nth-of-type(2n + 1) {
				transform-origin: 25vw 100%;
				--side: -1;
			}
			&:nth-of-type(2n) {
				transform-origin: -25vw 100%;
				--side: 1;
			}

			@media (width >= 720px) {
				&:nth-of-type(4n + 1) {
					transform-origin: 50vw 100%;
					--side: -1;
					--amp: 2;
				}
				&:nth-of-type(4n + 2) {
					transform-origin: 25vw 100%;
					--side: -1;
				}
				&:nth-of-type(4n + 3) {
					transform-origin: -25vw 100%;
					--side: 1;
				}
				&:nth-of-type(4n) {
					transform-origin: -50vw 100%;
					--side: 1;
					--amp: 2;
				}
			}

			@media (width >= 1200px) {
				&:nth-of-type(6n + 1) {
					transform-origin: 75vw 100%;
					--side: -1;
					--amp: 3;
				}
				&:nth-of-type(6n + 2) {
					transform-origin: 50vw 100%;
					--side: -1;
					--amp: 2;
				}
				&:nth-of-type(6n + 3) {
					transform-origin: 25vw 100%;
					--side: -1;
				}
				&:nth-of-type(6n + 4) {
					transform-origin: -25vw 100%;
					--side: 1;
				}
				&:nth-of-type(6n + 5) {
					transform-origin: -50vw 100%;
					--side: 1;
					--amp: 2;
				}
				&:nth-of-type(6n) {
					transform-origin: -75vw 100%;
					--side: 1;
					--amp: 3;
				}
			}

			@media (width >= 1920px) {
				&:nth-of-type(8n + 1) {
					transform-origin: 100vw 100%;
					--side: -1;
					--amp: 4;
				}
				&:nth-of-type(8n + 2) {
					transform-origin: 75vw 100%;
					--side: -1;
					--amp: 3;
				}
				&:nth-of-type(8n + 3) {
					transform-origin: 50vw 100%;
					--side: -1;
					--amp: 2;
				}
				&:nth-of-type(8n + 4) {
					transform-origin: 25vw 100%;
					--side: -1;
				}
				&:nth-of-type(8n + 5) {
					transform-origin: -25vw 100%;
					--side: 1;
				}
				&:nth-of-type(8n + 6) {
					transform-origin: -50vw 100%;
					--side: 1;
					--amp: 2;
				}
				&:nth-of-type(8n + 7) {
					transform-origin: -75vw 100%;
					--side: 1;
					--amp: 3;
				}
				&:nth-of-type(8n) {
					transform-origin: -100vw 100%;
					--side: 1;
					--amp: 4;
				}
			}
		}
	}

	.card {
		/* background: var(--surface-2); */
		backdrop-filter: blur(16px);

		border: 1px solid color-mix(in srgb, var(--surface-4), #0000 50%);
		padding-block: var(--size-3) var(--size-2);
		padding-inline: var(--size-3);
		border-radius: var(--radius-4);
		box-shadow: var(--shadow-4);

		&.landscape img {
			aspect-ratio: var(--ratio-landscape);
		}
		&.portrait img {
			aspect-ratio: var(--ratio-portrait);
		}
		&.square img {
			aspect-ratio: var(--ratio-square);
		}

		& > p {
			color: var(--text-2);
			line-clamp: 2;
		}

		& > :is(a, p) {
			font-size: var(--font-size-1);
			line-height: 1.25;
		}

		img {
			background-color: var(--surface-3);
			border-radius: var(--radius-3);
			margin-block-end: var(--size-2);
		}

		@media (prefers-color-scheme: light) {
			background: white;
		}
	}

	h5 {
		max-inline-size: 100%;
		text-align: center;
	}
}

@property --α {
	syntax: '<angle>';
	initial-value: 0deg;
	inherits: false;
}

@keyframes α {
	to {
		--α: 1turn;
	}
}

.card-anim {
	position: relative;
	border: solid 2px rgba(0, 0, 0, 0);
	padding: 0.75em; /* space between border & text */
	background: rgba(237, 171, 171, 0.1294117647);
}
.card-anim::before,
.card-anim::after {
	--full: conic-gradient(red 0 0);
	position: absolute;
	inset: -2px;
	border: inherit;
	border-radius: inherit;
	mask: var(--full) no-clip subtract, var(--full) padding-box;
	pointer-events: none;
	animation: α 4s linear infinite;
	content: '';
}
.card-anim::after {
	filter: blur(2em);
}

.card-anim:hover::before,
.card-anim:hover::after {
	box-shadow: 0 0 6em rgba(0, 0, 0, 0.001);
	background: conic-gradient(from var(--α), #f94144, #f3722c, #f8961e, #f9844a, #f9c74f, #90be6d, #43aa8b, #4d908e, #277da1, #577590, #f94144)
		border-box;
}

/* ------------------------------ */

.sparkle-button {
	position: fixed;
	bottom: 5rem;
	right: 5rem;

	button {
		--cut: 0.1em;
		--active: 0;
		--bg: radial-gradient(40% 50% at center 100%, hsl(270 calc(var(--active) * 97%) 72% / var(--active)), transparent),
			radial-gradient(80% 100% at center 120%, hsl(260 calc(var(--active) * 97%) 70% / var(--active)), transparent),
			hsl(260 calc(var(--active) * 97%) calc((var(--active) * 44%) + 12%));
		background: var(--bg);
		font-size: 2rem;
		font-weight: 500;
		border: 0;
		cursor: pointer;
		padding: 0.9em 1.3em;
		display: flex;
		align-items: center;
		gap: 0.25em;
		white-space: nowrap;
		border-radius: 100px;
		position: relative;
		box-shadow: 0 0 calc(var(--active) * 6em) calc(var(--active) * 3em) hsl(260 97% 61% / 0.75),
			0 0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc((var(--active) * 50%) + 30%)) inset,
			0 -0.05em 0 0 hsl(260 calc(var(--active) * 97%) calc(var(--active) * 60%)) inset;
		transition: box-shadow var(--transition), scale var(--transition), background var(--transition);
		scale: calc(1 + (var(--active) * 0.1));
	}

	button:active {
		scale: 1;
	}

	svg {
		overflow: visible !important;
	}

	.sparkle path {
		color: hsl(0 0% calc((var(--active, 0) * 70%) + var(--base)));
		transform-box: fill-box;
		transform-origin: center;
		fill: currentColor;
		stroke: currentColor;
		animation-delay: calc((var(--transition) * 1.5) + (var(--delay) * 1s));
		animation-duration: 0.6s;
		transition: color var(--transition);
	}

	button:is(:hover, :focus-visible) path {
		animation-name: bounce;
	}

	@keyframes bounce {
		35%,
		65% {
			scale: var(--scale);
		}
	}
	.sparkle path:nth-of-type(1) {
		--scale: 0.5;
		--delay: 0.1;
		--base: 40%;
	}

	.sparkle path:nth-of-type(2) {
		--scale: 1.5;
		--delay: 0.2;
		--base: 20%;
	}

	.sparkle path:nth-of-type(3) {
		--scale: 2.5;
		--delay: 0.35;
		--base: 30%;
	}

	button:before {
		content: '';
		position: absolute;
		inset: -0.25em;
		z-index: -1;
		border: 0.25em solid hsl(260 97% 50% / 0.5);
		border-radius: 100px;
		opacity: var(--active, 0);
		transition: opacity var(--transition);
	}

	.spark {
		position: absolute;
		inset: 0;
		border-radius: 100px;
		rotate: 0deg;
		overflow: hidden;
		mask: linear-gradient(white, transparent 50%);
		animation: flip calc(var(--spark) * 2) infinite steps(2, end);
	}

	@keyframes flip {
		to {
			rotate: 360deg;
		}
	}

	.spark:before {
		content: '';
		position: absolute;
		width: 200%;
		aspect-ratio: 1;
		top: 0%;
		left: 50%;
		z-index: -1;
		translate: -50% -15%;
		rotate: 0;
		transform: rotate(-90deg);
		opacity: calc((var(--active)) + 0.4);
		background: conic-gradient(from 0deg, transparent 0 340deg, white 360deg);
		transition: opacity var(--transition);
		animation: rotate var(--spark) linear infinite both;
	}

	.spark:after {
		content: '';
		position: absolute;
		inset: var(--cut);
		border-radius: 100px;
	}

	.backdrop {
		position: absolute;
		inset: var(--cut);
		background: var(--bg);
		border-radius: 100px;
		transition: background var(--transition);
	}

	@keyframes rotate {
		to {
			transform: rotate(90deg);
		}
	}

	@supports (selector(:has(:is(+ *)))) {
		body:has(button:is(:hover, :focus-visible)) {
			--active: 1;
			--play-state: running;
		}
		.bodydrop {
			display: none;
		}
	}

	button:is(:hover, :focus-visible) ~ :is(.bodydrop, .particle-pen) {
		--active: 1;
		--play-state: runnin;
	}

	.bodydrop {
		background: hsl(260 calc(var(--active) * 97%) 6%);
		position: fixed;
		inset: 0;
		z-index: -1;
	}

	button:is(:hover, :focus-visible) {
		--active: 1;
		--play-state: running;
	}

	.particle-pen {
		position: absolute;
		width: 200%;
		aspect-ratio: 1;
		top: 50%;
		left: 50%;
		translate: -50% -50%;
		-webkit-mask: radial-gradient(white, transparent 65%);
		z-index: -1;
		opacity: var(--active, 0);
		transition: opacity var(--transition);
	}

	.particle {
		fill: white;
		width: calc(var(--size, 0.25) * 1rem);
		aspect-ratio: 1;
		position: absolute;
		top: calc(var(--y) * 1%);
		left: calc(var(--x) * 1%);
		opacity: var(--alpha, 1);
		animation: float-out calc(var(--duration, 1) * 1s) calc(var(--delay) * -1s) infinite linear;
		transform-origin: var(--origin-x, 1000%) var(--origin-y, 1000%);
		z-index: -1;
		animation-play-state: var(--play-state, paused);
	}

	.particle path {
		fill: hsl(0 0% 90%);
		stroke: none;
	}

	.particle:nth-of-type(even) {
		animation-direction: reverse;
	}

	@keyframes float-out {
		to {
			rotate: 360deg;
		}
	}

	.text {
		translate: 2% -6%;
		letter-spacing: 0.01ch;
		background: linear-gradient(90deg, hsl(0 0% calc((var(--active) * 100%) + 65%)), hsl(0 0% calc((var(--active) * 100%) + 26%)));
		-webkit-background-clip: text;
		color: transparent;
		transition: background var(--transition);
	}

	button svg {
		inline-size: 1.25em;
		translate: -25% -5%;
	}
}

/* Generate PDF dialog */
::backdrop {
	background-image: linear-gradient(45deg, magenta, rebeccapurple, dodgerblue, green);
	opacity: 0.75;
}

dialog {
	width: 600px;
}
